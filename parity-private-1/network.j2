# Project
locals {
  project = "parity_private_1"
}

# Network
module "network" {
  source  = "../network"
  project = local.project
}

# IAM role
resource "aws_iam_role" "relay" {
  provider    = aws.us-east-2
  name = "${local.project}_relay"

  assume_role_policy = <<EOF
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Principal": {
        "Service": "ec2.amazonaws.com"
      },
      "Action": "sts:AssumeRole"
    }
  ]
}
EOF
}

# IAM profile
resource "aws_iam_instance_profile" "relay" {
  provider    = aws.us-east-2
  name = "${local.project}_relay"
  role = "${aws_iam_role.relay.name}"
}

# Monitoring subnet
data "aws_subnet" "monitoring" {
  provider = aws.us-east-2
  id = "subnet-06663c1f3455564a4"
}

# Monitoring route table
data "aws_route_table" "monitoring" {
  provider = aws.us-east-2
  subnet_id = data.aws_subnet.monitoring.id
}

{% for region in regions -%}
################ {{region}} begin ################

# Provider
provider "aws" {
  alias  = "{{region}}"
  region = "{{region}}"
}

# Monitoring Peering
module "{{region}}-monitoring" {
  source = "../network/modules/peering_connection"
  project = local.project
  src_vpc_id = module.network.{{region}}.vpc.id
  dst_vpc_id = data.aws_subnet.monitoring.vpc_id
  src_route_table_id = module.network.{{region}}.route_table.id
  dst_route_table_id = data.aws_route_table.monitoring.id
  src_cidr = "192.168.32.{{(loop.index-1)*16}}/28"
  dst_cidr = data.aws_subnet.monitoring.cidr_block

  providers = {
    aws.src = "aws.{{region}}"
    aws.dst = "aws.us-east-2"
  }
}

# SSH
resource "aws_security_group" "ssh_{{region}}" {
  provider    = aws.{{region}}
  name_prefix = "ssh-"
  description = "SSH access"
  vpc_id      = module.network.{{region}}.vpc.id

  ingress {
    cidr_blocks = ["0.0.0.0/0"]
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
  }

  tags = {
    project = local.project
  }
}

# Egress
resource "aws_security_group" "egress_{{region}}" {
  provider    = aws.{{region}}
  name_prefix = "egress-"
  description = "Egress traffic"
  vpc_id      = module.network.{{region}}.vpc.id

  egress {
    cidr_blocks = ["0.0.0.0/0"]
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
  }

  tags = {
    project = local.project
  }
}

# Discovery
resource "aws_security_group" "discovery_{{region}}" {
  provider    = aws.{{region}}
  name_prefix = "discovery-"
  description = "Discovery beacon access"
  vpc_id      = module.network.{{region}}.vpc.id

  ingress {
    cidr_blocks = ["0.0.0.0/0"]
    from_port   = 8002
    to_port     = 8002
    protocol    = "udp"
  }

  tags = {
    project = local.project
  }
}

# Internal
resource "aws_security_group" "internal_{{region}}" {
  provider    = aws.{{region}}
  name_prefix = "internal-"
  description = "Internal traffic"
  vpc_id      = module.network.{{region}}.vpc.id

  ingress {
    cidr_blocks = ["10.0.0.0/16"]
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
  }

  tags = {
    project = local.project
  }
}

# Relay
module "relay_{{region}}" {
  source             = "../relay-alpha-1"
  project            = local.project
  subnet_id          = module.network.{{region}}.subnet.id
  key_name           = "ltcdemo"
  security_group_ids = [
    aws_security_group.ssh_{{region}}.id,
    aws_security_group.egress_{{region}}.id,
    aws_security_group.discovery_{{region}}.id,
    aws_security_group.internal_{{region}}.id
  ]
  iam_instance_profile = aws_iam_instance_profile.relay.name

  providers = {
    aws = aws.{{region}}
  }
}

################ {{region}} end ################


{% endfor -%}

# Beacon
module "beacon" {
  source             = "../beacon-alpha-1"
  project            = local.project
  subnet_id          = module.network.us-east-2.subnet.id
  key_name           = "ltcdemo"
  security_group_ids = [
    aws_security_group.ssh_us-east-2.id,
    aws_security_group.egress_us-east-2.id,
    aws_security_group.discovery_us-east-2.id
  ]

  providers = {
    aws = aws.us-east-2
  }
}
